---
import { getCldImageUrl } from "astro-cloudinary/helpers";
import { db, eq, Projects, Posts, desc } from "astro:db";
import Icon from "astro-iconify";
import { actions } from "astro:actions";
import DOMPurify from "isomorphic-dompurify";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer.astro";

// Get the project ID from the URL
const slug = Astro.params.id;

if (!slug) {
  return Astro.redirect("/");
}

const projects = await db.select().from(Projects).where(eq(Projects.slug, slug)).limit(1);

if (!projects.length) {
  return Astro.redirect("/404");
}

let project = projects[0];

if (!project.isPublished) {
  return Astro.redirect("/404");
}

const bannerImageUrl = getCldImageUrl({
  src: project?.bannerImageId || "",
  width: 1200,
  crop: "fill",
  format: "webp"
});

const logoImageUrl = getCldImageUrl({
  src: project?.logoImageId || "",
  width: 512,
  crop: "fill",
  format: "webp"
});

const youtubeVideoId = project?.youtubeVideoUrl?.split("v=")[1] as string | undefined;
const youtubeVideoUrl = new URL(`https://www.youtube.com/embed/${youtubeVideoId}`);
youtubeVideoUrl.searchParams.set("rel", "0");

const posts = await db.select().from(Posts).where(eq(Posts.projectId, project.id)).orderBy(desc(Posts.createdAt));

const result = Astro.getActionResult(actions.leads.createLead);

// Extract text content from project.content
const contentText = project?.content
  ? DOMPurify.sanitize(project.content, { ALLOWED_TAGS: [] }).replace(/<[^>]*>?/g, "")
  : "";

const description = contentText.length > 150 ? contentText.slice(0, 150) + "..." : contentText;

const title = project?.title;

const rssUrl = new URL(`/api/posts/rss.xml?projectId=${project.id}`, Astro.url);

const ogImageUrl = `https://api.faith.tools/og?title=${encodeURIComponent(title)}&id=${encodeURIComponent(project.id + "-" + project.slug)}`;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the project slug
Astro.response.headers.set("netlify-cache-tag", slug);
---

<Layout title={title} description={description} ogImageUrl={ogImageUrl}>
  <link
    slot="head"
    rel="alternate"
    type="application/rss+xml"
    title={`${title} â€¢ faith.tools kit`}
    href={rssUrl.toString()}
  />

  <div
    x-init={`
      toastErrorMessage = \`${result?.error?.message || ""}\`;
      toastMessage = \`${result?.data?.success ? "Successfully signed up for updates!" : ""}\`;
    `}
    class="prose p-6 py-12 container mx-auto flex flex-col gap-12"
  >
    <main class="flex flex-col gap-6 w-full">
      <div class="p-6 rounded-2xl bg-white w-full shadow flex flex-col gap-6">
        <section class="flex gap-4 max-sm:flex-col items-center">
          {
            logoImageUrl ? (
              <img
                src={logoImageUrl}
                alt=""
                class="m-0 mb-4 max-w-32 max-h-32 aspect-square w-full h-full object-cover object-center rounded-2xl shadow bg-slate-100"
              />
            ) : null
          }
          <div class="flex flex-col gap-1">
            <h1 class="line-clamp-2 ellipsis my-0 line-clamp-2">{project?.title}</h1>
            <p class="text-lg text-slate-500 my-0">By {project?.authors}</p>
          </div>
        </section>

        {
          youtubeVideoId ? (
            <iframe
              class="my-0 rounded-xl border-2 border-slate-200 aspect-video object-cover object-center w-full"
              width="100%"
              height="100%"
              src={youtubeVideoUrl.toString()}
              frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
            />
          ) : bannerImageUrl ? (
            <img
              src={bannerImageUrl}
              alt=""
              class="my-0 rounded-xl border-2 border-slate-200 aspect-video object-cover object-center w-full"
            />
          ) : null
        }

        <div class="text-xl" slot="content">
          <div class="flex gap-3 max-sm:flex-col items-center mb-6">
            <!-- Button to sign up -->
            <button
              @click="$refs.getUpdatesModal.showModal()"
              class={project?.callToActionText && project?.callToActionUrl
                ? "max-sm:w-full btn btn-secondary bg-slate-200 hover:bg-slate-300 text-slate-900 hover:text-slate-900 shadow-none border-2 border-slate-200 hover:border-slate-300"
                : "max-sm:w-full btn btn-primary text-white"}
            >
              Get Updates
            </button>
            {
              project?.callToActionText && project?.callToActionUrl ? (
                <a href={project?.callToActionUrl} class="max-sm:w-full btn btn-primary text-white">
                  {project?.callToActionText}
                  <Icon pack="lucide" name="square-arrow-out-up-right" class="w-4 h-4" />
                </a>
              ) : null
            }
          </div>
          <Fragment set:html={project?.content} />
        </div>

        <dialog x-ref="getUpdatesModal" id="my_modal_2" class="modal">
          <div class="modal-box bg-white flex flex-col gap-6 p-6 max-w-md">
            <h2 class="text-2xl my-0 items-center w-full">
              <Icon pack="lucide" name="mail" class="w-8 h-8 inline-block mr-1 align-top" />
              <span>Get Updates</span>
            </h2>
            <form method="POST" class="flex flex-col gap-4 w-full" action={actions.leads.createLead}>
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">What's your name?</span>
                  <span class="text-xs label-text text-slate-500">Required</span>
                </div>
                <input
                  type="text"
                  name="name"
                  class="input input-lg text-base bg-white rounded-lg input-bordered w-full"
                  placeholder="Your name"
                  required
                />
              </label>
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">And, your email?</span>
                  <span class="text-xs label-text text-slate-500">Required</span>
                </div>
                <input
                  type="email"
                  name="email"
                  class="input input-lg text-base bg-white rounded-lg input-bordered w-full"
                  placeholder="email@example.com"
                  required
                />
              </label>
              <input type="hidden" name="projectId" value={project?.id} />
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">First impression of {project?.title}?</span>
                  <span class="text-xs label-text text-slate-500">Optional</span>
                </div>
                <textarea
                  name="message"
                  class="textarea textarea-lg text-base bg-white rounded-lg textarea-bordered w-full"
                  placeholder="Optional"></textarea>
              </label>
              <div class="flex flex-col gap-4">
                <button class="btn btn-primary mt-4 w-full">Submit</button>
                <p class="text-center text-slate-500 text-sm py-0 my-0">
                  By signing up, you're agreeing to receive updates on {project?.title} from the creator of the project.
                </p>
              </div>
            </form>
          </div>
          <form method="dialog" class="modal-backdrop">
            <button>close</button>
          </form>
        </dialog>

        {
          posts.length > 0 ? (
            <section class="mt-6 flex flex-col gap-4">
              <h2 class="text-2xl my-0 flex items-center gap-3">
                Posts
                <a
                  href={`/api/posts/rss.xml?projectId=${project.id}`}
                  class="btn w-fit self-center btn-sm btn-outline border-slate-200 hover:bg-slate-200 hover:text-slate-900 hover:border-slate-300 border-2 shadow-none"
                >
                  <Icon pack="lucide" name="rss" height={20} width={20} class="shrink-0" />
                  RSS Feed
                </a>
              </h2>
              <ul class="list-none p-0 m-0 flex flex-col gap-2">
                {posts.map((post) => (
                  <li class="p-0 m-0 grid grid-cols-[76px_1fr] gap-2 text-xl">
                    <time datetime={post.createdAt.toISOString()}>
                      {post.createdAt.toLocaleDateString("en-US", { month: "short", day: "numeric" })}
                    </time>
                    <a class="text-slate-800 hover:text-slate-900" href={`/app/${slug}/posts/${post.slug}`}>
                      {post.title}
                    </a>
                  </li>
                ))}
              </ul>
            </section>
          ) : null
        }
      </div>
    </main>
    <Footer />
  </div>
</Layout>
