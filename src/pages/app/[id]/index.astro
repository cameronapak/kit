---
import { getCldImageUrl } from "astro-cloudinary/helpers";
import { db, eq, Projects, Posts } from "astro:db";
import Icon from "astro-iconify";
import { actions } from "astro:actions";
import DOMPurify from "isomorphic-dompurify";
import Layout from "../../../layouts/Layout.astro";
import Footer from "../../../components/Footer.astro";
import Logo from "../../../components/Logo.astro";

// Get the project ID from the URL
const projectId = Number(Astro.params.id?.split("-")?.[0] || 0);

if (!projectId) {
  return Astro.redirect("/");
}

const projects = await db.select().from(Projects).where(eq(Projects.id, projectId)).limit(1);

let project = projects[0];

const bannerImageUrl = getCldImageUrl({
  src: project?.bannerImageId || "",
  width: 1200,
  crop: "fill",
  format: "webp"
});

const youtubeVideoId = project?.youtubeVideoUrl?.split("v=")[1] as string | undefined;
const youtubeVideoUrl = new URL(`https://www.youtube.com/embed/${youtubeVideoId}`);
youtubeVideoUrl.searchParams.set("rel", "0");

const posts = await db.select().from(Posts).where(eq(Posts.projectId, projectId));

const result = Astro.getActionResult(actions.leads.createLead);

// Extract text content from project.content
const contentText = project?.content
  ? DOMPurify.sanitize(project.content, { ALLOWED_TAGS: [] }).replace(/<[^>]*>?/g, "")
  : "";

const description = contentText.length > 150 ? contentText.slice(0, 150) + "..." : contentText;

const title = project?.title;

// Cache for 4 hours, revalidate once per hour, and serve stale if error for 24 hours.
Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=14400, stale-if-error=86400"
);
Astro.response.headers.set(
  "CDN-Cache-Control",
  "public, max-age=14400, stale-while-revalidate=3600, stale-if-error=86400"
);
---

<Layout title={title} description={description} ogImage={bannerImageUrl}>
  <div x-data class="prose p-6 pb-12 container mx-auto flex flex-col gap-12">
    <header class="flex justify-center">
      <Logo />
    </header>

    {
      result?.error && (
        <div class="toast toast-top toast-center">
          <div role="alert" class="alert alert-error bg-red-100 border-red-200 text-red-900">
            <Icon pack="lucide" name="x-circle" height={20} width={20} class="shrink-0" />
            <span>{result.error.message || "An error occurred"}</span>
          </div>
        </div>
      )
    }
    {
      result?.data?.success && (
        <div
          x-data="{ show: true }"
          x-show="show"
          x-transition:enter="transition ease-out duration-300"
          x-transition:enter-start="opacity-0 transform -translate-y-2"
          x-transition:enter-end="opacity-100 transform translate-y-0"
          x-transition:leave="transition ease-in duration-300"
          x-transition:leave-start="opacity-100 transform translate-y-0"
          x-transition:leave-end="opacity-0 transform -translate-y-2"
          x-init="setTimeout(() => show = false, 5000)"
          class="toast toast-top toast-center"
        >
          <div role="alert" class="alert alert-info bg-cyan-100 border-cyan-200 text-cyan-900">
            <Icon pack="lucide" name="check-circle" height={20} width={20} class="shrink-0" />
            <span>Signed up for {project?.title} updates!</span>
          </div>
        </div>
      )
    }

    <main class="flex flex-col gap-6 w-full">
      <div class="p-6 rounded-2xl bg-white w-full shadow flex flex-col gap-6">
        {
          youtubeVideoId ? (
            <iframe
              class="my-0 rounded-xl border-2 border-slate-200 aspect-video object-cover object-center w-full"
              width="100%"
              height="100%"
              src={youtubeVideoUrl.toString()}
              frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
            />
          ) : bannerImageUrl ? (
            <img
              src={bannerImageUrl}
              alt=""
              class="my-0 rounded-xl border-2 border-slate-200 aspect-video object-cover object-center w-full"
            />
          ) : null
        }

        <section class="flex gap-3 max-sm:flex-col justify-between items-start">
          <div class="flex flex-col gap-1">
            <h1 class="pt-2 line-clamp-2 ellipsis my-0">{project?.title}</h1>
            <p class="text-lg text-slate-500 my-0">By {project?.authors}</p>
          </div>
          <!-- Button to sign up -->
          <button @click="$refs.getUpdatesModal.showModal()" class="max-sm:w-full btn btn-primary">Get Updates</button>
        </section>

        <div class="text-xl" slot="content">
          <Fragment set:html={project?.content} />
        </div>

        <dialog x-ref="getUpdatesModal" id="my_modal_2" class="modal">
          <div class="modal-box bg-white flex flex-col gap-6 p-6 max-w-md">
            <h2 class="text-2xl my-0 items-center w-full">
              <Icon pack="lucide" name="mail" class="w-8 h-8 inline-block mr-1 align-top" />
              <span>Get Updates</span>
            </h2>
            <form method="POST" class="flex flex-col gap-4 w-full" action={actions.leads.createLead}>
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">What's your name?</span>
                  <span class="text-xs label-text text-slate-500">Required</span>
                </div>
                <input
                  type="text"
                  name="name"
                  class="input input-lg text-base bg-white rounded-lg input-bordered w-full"
                  placeholder="Your name"
                  required
                />
              </label>
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">And, your email?</span>
                  <span class="text-xs label-text text-slate-500">Required</span>
                </div>
                <input
                  type="email"
                  name="email"
                  class="input input-lg text-base bg-white rounded-lg input-bordered w-full"
                  placeholder="email@example.com"
                  required
                />
              </label>
              <input type="hidden" name="projectId" value={project?.id} />
              <label class="form-control w-full">
                <div class="label">
                  <span class="text-base label-text">First impression of {project?.title}?</span>
                  <span class="text-xs label-text text-slate-500">Optional</span>
                </div>
                <textarea
                  name="message"
                  class="textarea textarea-lg text-base bg-white rounded-lg textarea-bordered w-full"
                  placeholder="Optional"></textarea>
              </label>
              <div class="flex flex-col gap-4">
                <button class="btn btn-primary mt-4 w-full">Submit</button>
                <p class="text-center text-slate-500 text-sm py-0 my-0">
                  By signing up, you're agreeing to receive updates on {project?.title} from the creator of the project.
                </p>
              </div>
            </form>
          </div>
          <form method="dialog" class="modal-backdrop">
            <button>close</button>
          </form>
        </dialog>

        {
          posts.length > 0 ? (
            <section class="mt-6">
              <h2 class="text-2xl my-0">Posts</h2>
              <ul class="list-none p-0 m-0">
                {posts.map((post) => (
                  <li class="p-0 m-0 grid grid-cols-[76px_1fr] gap-2 text-xl">
                    <time datetime={post.createdAt.toISOString()}>
                      {post.createdAt.toLocaleDateString("en-US", { month: "short", day: "numeric" })}
                    </time>
                    <a class="text-slate-800 hover:text-slate-900" href={`/app/${Astro.params.id}/posts/${post.slug}`}>{post.title}</a>
                  </li>
                ))}
              </ul>
            </section>
          ) : null
        }
      </div>
    </main>
    <Footer />
  </div>
</Layout>
