---
import "trix/dist/trix.css";
import { Icon } from "astro-iconify";
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import { actions } from "astro:actions";

if (!Astro.locals.auth().userId) {
  return Astro.redirect("/");
}

const user = await Astro.locals.currentUser();

// Handle form submission result
const result = Astro.getActionResult(actions.posts.createPost);
---

<Layout title="Dashboard">
  <div class="p-6 container mx-auto">
    <Header activeTab="posts" />

    <main class="py-12 flex flex-col gap-6">
      <section class="relative w-full m-0">
        <div
          class="absolute z-10 top-0 left-0 right-0 scale-[95%] m-0 list-none p-4 py-1 pb-12 rounded-xl bg-white w-full shadow-sm flex flex-col gap-2"
        >
          <!-- daisyUI breadcrumbs -->
          <div class="not-prose breadcrumbs text-sm flex justify-center text-cyan-700">
            <ul>
              <li>
                <a href="/dashboard/posts" class="flex items-center gap-2">
                  <Icon pack="lucide" name="feather" height={16} width={16} class="shrink-0" />
                  Posts
                </a>
              </li>
              <li>New</li>
            </ul>
          </div>
        </div>
        <div
          class="relative translate-y-10 z-20 m-0 list-none p-6 rounded-2xl bg-white w-full shadow-[0_4px_20px_rgb(0,0,0,0.08)] flex flex-col gap-2"
        >
          {
            result?.error && (
              <div role="alert" class="alert alert-error bg-red-100 border-red-200 text-red-900">
                <Icon pack="lucide" name="x-circle" height={20} width={20} class="shrink-0" />
                <span>{result.error.message || "An error occurred"}</span>
              </div>
            )
          }
          {
            result?.data?.success && (
              <div role="alert" class="alert alert-info bg-cyan-100 border-cyan-200 text-cyan-900">
                <Icon pack="lucide" name="check-circle" height={20} width={20} class="shrink-0" />
                <span>Post created successfully!</span>
              </div>
            )
          }

          <form
            x-data="{ 
              title: '', 
              maxLength: 100, 
              get slug() { 
                return this.title
                  .toLowerCase()
                  .replace(/[^\w\s-]/g, '') // Remove non-word chars (except hyphens and spaces)
                  .replace(/[\u{1F600}-\u{1F64F}\u{1F300}-\u{1F5FF}\u{1F680}-\u{1F6FF}\u{1F1E0}-\u{1F1FF}]/gu, '') // Remove emojis
                  .replace(/\s+/g, '-') // Replace spaces with hyphens
                  .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen
                  .trim() // Trim leading/trailing spaces or hyphens
                  .slice(0, 100); // Limit to 100 characters
              } 
            }"
            action={actions.posts.createPost}
            method="post"
            class="flex flex-col gap-6"
          >
            <div>
              <input
                name="title"
                x-model="title"
                @input="title = $event.target.value.slice(0, maxLength)"
                type="text"
                class="input input-bordered w-full rounded-lg bg-white"
                required
                placeholder="Title"
                maxlength="100"
              />
              <p class="text-xs text-slate-500 mt-2 mb-0">
                <span x-text="title.length"></span>/<span x-text="maxLength"></span> characters
              </p>
            </div>

            <input type="hidden" name="createdAt" value={new Date().toISOString()} />
            <input type="hidden" name="slug" x-model="slug" />
            <input type="hidden" name="userId" value={user?.id} />
            <input type="hidden" name="content" id="x" />
            <div>
              <trix-editor input="x" placeholder="Write your post here..."></trix-editor>
            </div>

            <button type="submit" class="btn btn-md btn-primary text-white">Create Post</button>
          </form>
        </div>
      </section>
    </main>
  </div>
</Layout>

<script>
  // @ts-ignore - no types available
  import Trix from "trix";
  import { setupKeyboardNavigation } from "../../../libs/utils";

  document.addEventListener("trix-file-accept", function (event) {
    event.preventDefault();
  });

  setupKeyboardNavigation();
</script>
